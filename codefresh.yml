version: '1.0'
steps:

  check_env:
    image: bash:4.4.23
    commands:
      - echo 'Checking for CLUSTER_NAME, AWS_ACCESS_KEY_ID, and AWS_SECRET_ACCESS_KEY...'
      - '[[ -z $CLUSTER_NAME || -z $AWS_ACCESS_KEY_ID || -z $AWS_SECRET_ACCESS_KEY ]] && exit 1 || true'

  load_tfstate:
    image: codefresh/cli:0.8.54
    commands:
      - apk add --update make bash
      - make codefresh-load-tfstate || echo "Skipping."

  setup_eks_cluster:
    image: hashicorp/terraform:0.11.7
    commands:
      - apk add --update make bash
      - set +e; make setup; cf_export RC=$?

  save_tfstate:
    image: codefresh/cli:0.8.54
    commands:
      - apk add --update make bash
      - make codefresh-save-tfstate
      - exit ${{RC}}

  create_kubernetes_resources:
    image: lachlanevenson/k8s-kubectl:v1.10.4
    commands:
      - wget https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-06-05/bin/linux/amd64/heptio-authenticator-aws
      - chmod +x heptio-authenticator-aws
      - cp heptio-authenticator-aws /usr/local/bin
      - export KUBECONFIG="$(pwd)/kubeconfig.yaml"
      - kubectl apply -f config-map-aws-auth.yaml
      - kubectl apply -f service-account.yaml
      - kubectl apply -f role-binding.yaml

  init_helm:
    image: lachlanevenson/k8s-helm:v2.9.1
    commands:
      - cp heptio-authenticator-aws /usr/local/bin
      - export KUBECONFIG="$(pwd)/kubeconfig.yaml"
      - helm init --service-account admin-user

  get_token:
   image: lachlanevenson/k8s-kubectl:v1.10.4
   commands:
     - cp heptio-authenticator-aws /usr/local/bin
     - export KUBECONFIG="$(pwd)/kubeconfig.yaml"
     - kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')
